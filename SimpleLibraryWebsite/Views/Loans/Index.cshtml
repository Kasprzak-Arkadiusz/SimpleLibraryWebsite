@model SimpleLibraryWebsite.Models.ViewModels.LoanViewModel
@inject IAuthorizationService _authorizationService

@{
    ViewBag.Title = "List of book loans";
    var loanPages = Model.PaginatedList;
}

<h1>@ViewBag.Title</h1>

<p>Here you can see all book loans.</p>

<form asp-controller="Loans" asp-action="Index" method="get">
    <div class="container center">
        <div class="row justify-content-center">
            <div class="form-group">
                <div class="col-md-auto">
                    <b>Reader name:</b><br/>
                    <input type="text" asp-for="ReaderFirstName" value="@ViewBag.CurrentFirstNameFilter" />
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="form-group">
                <div class="col-md-auto">
                    <b>Reader last name:</b><br/>
                    <input type="text" asp-for="ReaderLastName" value="@ViewBag.CurrentLastNameFilter" />
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="form-group">
                <div class="col-md-auto">
                    <b>Book title:</b><br/>
                    <input type="text" asp-for="BookTitle" value="@ViewBag.CurrentTitleFilter" />
                </div>
            </div>
        </div>

        <input type="submit" value="Filter" style="margin-bottom:20px"/>
    </div>
</form>

<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortorder="@ViewBag.TitleSortParam"
               asp-route-currentfirstnamefilter="@ViewBag.CurrentFirstNameFilter"
               asp-route-currentlastnamefilter="@ViewBag.CurrentLastNameFilter"
               asp-route-currenttitlefilter="@ViewBag.CurrentTitleFilter"
               asp-route-pagenumber="@Model.PaginatedList.PageNumber">@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Book.Title)
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortorder="@ViewBag.ReaderFirstNameSortParam"
               asp-route-currentfirstnamefilter="@ViewBag.CurrentFirstNameFilter"
               asp-route-currentlastnamefilter="@ViewBag.CurrentLastNameFilter"
               asp-route-currenttitlefilter="@ViewBag.CurrentTitleFilter"
               asp-route-pagenumber="@Model.PaginatedList.PageNumber">@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Reader.FirstName)
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortorder="@ViewBag.ReaderLastNameSortParam"
               asp-route-currentfirstnamefilter="@ViewBag.CurrentFirstNameFilter"
               asp-route-currentlastnamefilter="@ViewBag.CurrentLastNameFilter"
               asp-route-currenttitlefilter="@ViewBag.CurrentTitleFilter"
               asp-route-pagenumber="@Model.PaginatedList.PageNumber">@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Reader.LastName)
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortorder="@ViewBag.LentToSortParam"
               asp-route-currentfirstnamefilter="@ViewBag.CurrentFirstNameFilter"
               asp-route-currentlastnamefilter="@ViewBag.CurrentLastNameFilter"
               asp-route-currenttitlefilter="@ViewBag.CurrentTitleFilter"
               asp-route-pagenumber="@Model.PaginatedList.PageNumber">@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().LentTo)
            </a>
        </th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (Loan item in Model.PaginatedList) {
        <tr>

            <td>@Html.DisplayFor(modelItem => item.Book.Title)
            </td>
            <td>@Html.DisplayFor(modelItem => item.Reader.FirstName)
            </td>
            <td>@Html.DisplayFor(modelItem => item.Reader.LastName)
            </td>
            <td>@Html.DisplayFor(modelItem => item.LentTo)
            </td>
            <td>@if ((await _authorizationService.AuthorizeAsync(
                    User, item,
                    Operations.Return)).Succeeded)
                {
                    <a asp-action="Return" asp-route-id="@item.LoanId" class="btn btn-return">Return</a>
                }
                <a asp-action="Details" asp-route-id="@item.LoanId" class="btn btn-primary">Details</a>
            </td>
        </tr>
    }

    </tbody>
</table>
        
<div class="center justify-content-center">
Page @(Model.PaginatedList.PageCount < Model.PaginatedList.PageNumber ? 0 : Model.PaginatedList.PageNumber) of @Model.PaginatedList.PageCount
@Html.PagedListPager(loanPages, pageNumber => 
    Url.Action("Index", new
    {
        pageNumber,
        sortOrder = ViewBag.CurrentSort,
        currentTitleFilter = ViewBag.CurrentTitleFilter,
        currentFirstNameFilter = ViewBag.CurrentFirstNameFilter,
        currentLastNameFilter = ViewBag.CurrentLastNameFilter
    }) )
</div>