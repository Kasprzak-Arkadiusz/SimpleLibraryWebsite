@model SimpleLibraryWebsite.Models.ViewModels.RequestViewModel
@inject IAuthorizationService _authorizationService

@{
    ViewBag.Title = "Book requests";
    var requestPages = Model.PaginatedList;
}

<h1>@ViewBag.Title</h1>

<p>
    Here you can view requests submitted by other users. 
    <br />
    Feel free to add new requests and view others requests.
</p>

<form asp-controller="Requests" asp-action="Index" method="get">
    <div class="container center">
        <div class="row justify-content-center">
            <div class="form-group">
                <div class="col-md-auto">
                    <b>Book title:</b><br/>
                    <input type="text" asp-for="BookTitle" value="@ViewBag.CurrentTitleFilter" />
                </div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="form-group">
                <div class="col-md-auto">
                    <b>Book author:</b><br/>
                    <input type="text" asp-for="Author" value="@ViewBag.CurrentAuthorFilter" />
                </div>
            </div>
        </div>
        <input type="submit" value="Filter" style="margin-bottom:20px"/>
    </div>
</form>

        
@if (!ViewContext.HttpContext.User.IsInRole(Role.Librarian.ToString()))
{
    <p><a asp-action="Create" class="btn btn-success">Create New</a></p>
}


<table class="table center" style="margin-top:20px">
    <thead>
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortorder="@Html.ViewBag.TitleSortParam"
               asp-route-currenttitlefilter="@ViewBag.CurrentTitleFilter"
               asp-route-currentauthorfilter="@ViewBag.CurrentAuthorFilter"
               asp-route-pagenumber="@Model.PaginatedList.PageNumber">@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Title)
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortorder="@Html.ViewBag.AuthorSortParam"
               asp-route-currenttitlefilter="@ViewBag.CurrentTitleFilter"
               asp-route-currentauthorfilter="@ViewBag.CurrentAuthorFilter"
               asp-route-pagenumber="@Model.PaginatedList.PageNumber">@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Author)
            </a>
        </th>
        <th>@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Genre)
        </th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (Request item in Model.PaginatedList)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>@Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>@Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>@if ((await _authorizationService.AuthorizeAsync(
                    User, item,
                    Operations.Update)).Succeeded)
                {
                    <a asp-action="Edit" asp-route-id="@item.RequestId" class="btn btn-warning">Edit</a>
                }

                <a asp-action="Details" asp-route-id="@item.RequestId" class="btn btn-primary">Details</a>
                    
                @if ((await _authorizationService.AuthorizeAsync(
                    User, item,
                    Operations.Fulfill)).Succeeded)
                {
                    <a asp-action="Fulfill" asp-route-id="@item.RequestId" class="btn btn-info">Fulfill</a>
                }

                @if ((await _authorizationService.AuthorizeAsync(
                    User, item,
                    Operations.Delete)).Succeeded)
                {
                    <a asp-action="Delete" asp-route-id="@item.RequestId" class="btn btn-danger">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>
        

<div class="center justify-content-center">
Page @(Model.PaginatedList.PageCount < Model.PaginatedList.PageNumber ? 0 : Model.PaginatedList.PageNumber) of @Model.PaginatedList.PageCount
@Html.PagedListPager(requestPages, pageNumber => 
    Url.Action("Index", new
    {
        pageNumber,
        sortOrder = ViewBag.CurrentSort,
        currentTitleFilter = ViewBag.CurrentTitleFilter,
        currentAuthorFilter = ViewBag.CurrentAuthorFilter
    }) )
</div>