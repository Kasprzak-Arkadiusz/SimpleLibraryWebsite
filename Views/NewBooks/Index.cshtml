@model SimpleLibraryWebsite.Models.BookGenreViewModel

@{
    ViewData["Title"] = "New books";
}

<h1>New books</h1>

<p>Here you can view the newly added books.</p>

<form asp-controller="NewBooks" asp-action="Index" method="get">
    <p>
        Genre:
        <select asp-for="BookGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        Title:
        <input type="text" asp-for="BookTitle" value="@ViewData["CurrentFilter"]"/>
        <input type="submit" value="Filter"/>
    </p>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParam"]"
               asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
               asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]">
                @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Author)
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]"
               asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
               asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]">
                @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Title)
            </a>
        </th>
        <th>
            <a asp-route-currentFilter="@ViewData["CurrentFilter"]" 
               asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
               asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]">
                @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Genre)
            </a>
        </th>
        <th>
            <a  asp-route-currentFilter="@ViewData["CurrentFilter"]"
                asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
                asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]">
                 @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().IsBorrowed)
             </a>
        </th>
    </tr>
    </thead>
    <tbody>
@foreach (var item in Model.PaginatedList) {
    <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsBorrowed)
            </td>
             <td>
                <a asp-action="Details" asp-route-id="@item.BookId">Details</a>
             </td>
    </tr>
}
    </tbody>
</table>

@{
    string prevDisabled = !Model.PaginatedList.HasPreviousPage ? "disabled" : "";
    string nextDisabled = !Model.PaginatedList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PaginatedList.PageIndex - 1)"
   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
   asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PaginatedList.PageIndex + 1)"
   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
   asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>