@model SimpleLibraryWebsite.Models.RequestViewModel

@{
    ViewData["Title"] = "Book requests";
}

<h1>Book requests</h1>

<p>
    Here you can view requests submitted by other users. 
    <br />
    Feel free to add new requests and view others requests.
</p>

<form asp-controller="Requests" asp-action="Index" method="get">
    <div class="container">
        <div class="row">
            <div class="form-group">
                <div class="col-md-8">
                    <b>Book title:</b>
                    <input type="text" asp-for="BookTitle" value="@ViewData["CurrentTitleFilter"]"/>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-8">
                    <b>Book author:</b>
                    <input type="text" asp-for="Author" value="@ViewData["CurrentAuthorFilter"]"/>
                </div>
            </div>
        </div>
        <input type="submit" value="Filter" />
    </div>
</form>

<br />
<a asp-action="Create">Create New</a>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortorder="@Html.ViewData["TitleSortParam"]"
                   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
                   asp-route-currentAuthorFilter="@ViewData["CurrentAuthorFilter"]"
                   >
                    @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Title)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortorder="@Html.ViewData["AuthorSortParam"]"
                   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
                   asp-route-currentAuthorFilter="@ViewData["CurrentAuthorFilter"]">
                    @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Author)
                </a>
            </th>
            <th>@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Genre)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PaginatedList)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>@Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>@Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.RequestID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.RequestID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.RequestID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    string prevDisabled = !Model.PaginatedList.HasPreviousPage ? "disabled" : "";
    string nextDisabled = !Model.PaginatedList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PaginatedList.PageIndex - 1)"
   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
   asp-route-currentAuthorFilter="@ViewData["CurrentAuthorFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PaginatedList.PageIndex + 1)"
   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
   asp-route-currentAuthorFilter="@ViewData["CurrentAuthorFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>