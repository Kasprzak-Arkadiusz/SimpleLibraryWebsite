@model SimpleLibraryWebsite.Models.ReaderViewModel

@{
    ViewData["Title"] = "List of readers";
}

<h1>List of readers</h1>
    
<p>
    Below you can view the list of readers.
</p>
    
<form asp-controller="Readers" asp-action="Index" method="get">
    <div class="container">
        <div class="row">
            <div class="form-group">
                <div class="col-md-8">
                    <b>Reader name:</b>
                    <input type="text" asp-for="ReaderName" value="@ViewData["CurrentNameFilter"]"/>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-8">
                    <b>Reader LastName:</b>
                    <input type="text" asp-for="ReaderLastName" value="@ViewData["CurrentLastNameFilter"]"/>
                </div>
            </div>
        </div>

        <input type="submit" value="Filter" />
    </div>
</form>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ReaderNameSortParam"]"
                   asp-route-currentNameFilter="@ViewData["CurrentNameFilter"]"
                   asp-route-currentLastNameFilter="@ViewData["CurrentLastNameFilter"]">
                    @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().FirstName)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ReaderLastNameSortParam"]"
                   asp-route-currentNameFilter="@ViewData["CurrentNameFilter"]"
                   asp-route-currentLastNameFilter="@ViewData["CurrentLastNameFilter"]"> 
                    @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().LastName)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.PaginatedList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ReaderId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ReaderId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ReaderId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    string prevDisabled = !Model.PaginatedList.HasPreviousPage ? "disabled" : "";
    string nextDisabled = !Model.PaginatedList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PaginatedList.PageIndex - 1)"
   asp-route-currentNameFilter="@ViewData["CurrentNameFilter"]"
   asp-route-currentLastNameFilter="@ViewData["CurrentLastNameFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PaginatedList.PageIndex + 1)"
   asp-route-currentNameFilter="@ViewData["CurrentNameFilter"]"
   asp-route-currentLastNameFilter="@ViewData["CurrentLastNameFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>