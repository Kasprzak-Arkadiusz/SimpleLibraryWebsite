@model SimpleLibraryWebsite.Models.Book
@using Microsoft.AspNetCore.Authorization
@using SimpleLibraryWebsite.Services.Authorization
@inject IAuthorizationService _authorizationService

@{
    ViewBag.Title = "Details";
}

<h1>@ViewBag.Title</h1>
<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Author)
        </dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Genre)
        </dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.DateOfAdding)
        </dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.DateOfAdding)
        </dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.IsBorrowed)
        </dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.IsBorrowed)
        </dd>
    </dl>
</div>
<div>
    @if ((await _authorizationService.AuthorizeAsync(
        User, Model,
        Operations.Update)).Succeeded)
    {
        <a asp-action="Edit" asp-route-id="@Model.BookId">Edit</a> 
        <text>|</text>
    }

    @if ((await _authorizationService.AuthorizeAsync(
        User, Model,
        Operations.Borrow)).Succeeded)
    {
        @if (!Model.IsBorrowed)
        {
            <a asp-action="Borrow" asp-route-id="@Model.BookId">Borrow</a>
            <text>|</text>
        }
    }
    <a href="#" onclick="history.go(-1);return false;">Back</a>
</div>
