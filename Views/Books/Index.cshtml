@model SimpleLibraryWebsite.Models.ViewModels.BookGenreViewModel
@using SimpleLibraryWebsite.Models.Authorization
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService _authorizationService

@{
    ViewData["Title"] = "Book list";
}

    <h1>Book list</h1>

<p>Here you can view and search for books.</p>

<form asp-controller="Books" asp-action="Index" method="get">
    <p>
        Genre:
        <select asp-for="BookGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        Title:
        <input type="text" asp-for="BookTitle" value="@ViewData["CurrentTitleFilter"]"/>
        <input type="submit" value="Filter"/>
    </p>
</form>


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParam"]"
               asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
               asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]">
               @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Author)
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]"
               asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
               asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]">
               @Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Title)
            </a>
        </th>
        <th>@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().Genre)
        </th>
        <th>@Html.DisplayNameFor(model => model.PaginatedList.FirstOrDefault().IsBorrowed)
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.PaginatedList) {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>@Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>@Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>@Html.DisplayFor(modelItem => item.IsBorrowed)
            </td>
            <td>
                
                
                @if ((await _authorizationService.AuthorizeAsync(
                    User, item,
                    ContactOperations.Borrow)).Succeeded)
                {
                    @if (!item.IsBorrowed)
                    {
                        <a asp-action="Borrow" asp-route-id="@item.BookId">Borrow</a> 
                        <text>|</text>
                    }
                }
                
                @if ((await _authorizationService.AuthorizeAsync(
                    User, item,
                    ContactOperations.Update)).Succeeded)
                {
                    <a asp-action="Edit" asp-route-id="@item.BookId">Edit</a>
                    <text>|</text>
                }

                    <a asp-action="Details" asp-route-id="@item.BookId">Details</a> 

                @if ((await _authorizationService.AuthorizeAsync(
                    User, item,
                    ContactOperations.Delete)).Succeeded)
                {
                    <text>|</text>
                    <a asp-action="Delete" asp-route-id="@item.BookId">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    string prevDisabled = !Model.PaginatedList.HasPreviousPage ? "disabled" : "";
    string nextDisabled = !Model.PaginatedList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PaginatedList.PageIndex - 1)"
   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
   asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PaginatedList.PageIndex + 1)"
   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
   asp-route-CurrentGenreFilter="@ViewData["CurrentGenreFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>