@model SimpleLibraryWebsite.Models.Loan
@using SimpleLibraryWebsite.Models.Authorization
@using Microsoft.AspNetCore.Authorization
@using SimpleLibraryWebsite.Services.Authorization
@inject IAuthorizationService _authorizationService

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Loan</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayName("Book title")
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Book.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayName("Book author")
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Book.Author)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayName("Reader name")
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Reader.FirstName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayName("Reader surname")
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Reader.LastName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LentFrom)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LentFrom)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LentTo)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LentTo)
        </dd>
    </dl>
</div>
<div>
    @if ((await _authorizationService.AuthorizeAsync(
        User, Model,
        Operations.Return)).Succeeded)
    {
        <a asp-action="Return" asp-route-id="@Model.LoanId">Return</a>
        <text> | </text>
    }
    <a asp-action="Index">Back to List</a>
</div>
